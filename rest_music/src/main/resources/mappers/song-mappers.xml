<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.itwill.rest.repository.SongDao">
  
    <select id="detailBySongId" resultType="SongDetail">
        SELECT
            s.song_id,
            s.title AS song_title,
            a.album_name AS album_name,
            a.album_image AS album_image,
            singer.singer_name,
            writer.writers,
            composer.composers,
            arranger.arrangers,
            LISTAGG(gc.genre_name, ', ') WITHIN GROUP (ORDER BY gc.genre_name) AS genre,
            s.lyrics
        FROM
            songs s
            JOIN albums a ON s.album_id = a.album_id
            LEFT JOIN (
                SELECT
                    ar.song_id,
                    LISTAGG(art.artist_name, ', ') WITHIN GROUP (ORDER BY art.artist_name) AS singer_name
                FROM
                    artist_roles ar
                    JOIN artists art ON ar.artist_id = art.artist_id
                WHERE
                    ar.role_id = 1
                GROUP BY
                    ar.song_id
            ) singer ON s.song_id = singer.song_id
            LEFT JOIN (
                SELECT
                    ar.song_id,
                    LISTAGG(art.artist_name, ', ') WITHIN GROUP (ORDER BY art.artist_name) AS writers
                FROM
                    artist_roles ar
                    JOIN artists art ON ar.artist_id = art.artist_id
                WHERE
                    ar.role_id = 2
                GROUP BY
                    ar.song_id
            ) writer ON s.song_id = writer.song_id
            LEFT JOIN (
                SELECT
                    ar.song_id,
                    LISTAGG(art.artist_name, ', ') WITHIN GROUP (ORDER BY art.artist_name) AS composers
                FROM
                    artist_roles ar
                    JOIN artists art ON ar.artist_id = art.artist_id
                WHERE
                    ar.role_id = 3
                GROUP BY
                    ar.song_id
            ) composer ON s.song_id = composer.song_id
            LEFT JOIN (
                SELECT
                    ar.song_id,
                    LISTAGG(art.artist_name, ', ') WITHIN GROUP (ORDER BY art.artist_name) AS arrangers
                FROM
                    artist_roles ar
                    JOIN artists art ON ar.artist_id = art.artist_id
                WHERE
                    ar.role_id = 4
                GROUP BY
                    ar.song_id
            ) arranger ON s.song_id = arranger.song_id
            LEFT JOIN song_genre sg ON s.song_id = sg.song_id
            LEFT JOIN genre_code gc ON sg.genre_id = gc.genre_id
        WHERE
            s.song_id = #{id}
        GROUP BY
            s.song_id, s.title, a.album_name, a.album_image, s.lyrics, singer.singer_name, writer.writers, composer.composers, arranger.arrangers
    </select>
  
    <select id="isLikes" resultType="integer">
        select count(*) from likes where song_id = #{songId} and id = #{id}
    </select>
    
    <insert id="addLike">
        insert into likes (song_id, id) values (#{songId}, #{id})
    </insert>
    
    <delete id="removeLike">
        delete from likes where song_id = #{songId} and id = #{id}
    </delete>
    
    <select id="searchSongs" resultType="ResultDto">
    <bind name="searchKeyword" value="'%' + keyword + '%'" />
                            SELECT * FROM (
                    SELECT songId, albumName, albumImage, title, singerName, releaseDate, rnum
                    FROM (
                        SELECT s.song_id AS songId,
                               a.album_name AS albumName,
                               a.album_image AS albumImage,
                               s.title AS title,
                               art.artist_name AS singerName,
                               a.album_release_date AS releaseDate,
                               ROW_NUMBER() OVER (ORDER BY a.album_release_date DESC) AS rnum
                        FROM songs s
                        JOIN albums a ON s.album_id = a.album_id
                        JOIN artist_roles ar ON s.song_id = ar.song_id AND ar.role_id = 1 
                        JOIN artists art ON ar.artist_id = art.artist_id
                    <where>
                        <choose>
                            <when test='category.equals("t")'>
                                upper(s.title) like upper(#{searchKeyword})
                            </when>
                            <when test='category.equals("s")'>
                                upper(art.artist_name) like upper(#{searchKeyword})
                            </when>
                            <when test='category.equals("ts")'>
                                upper(s.title) like upper(#{searchKeyword})
                                or
                                upper(art.artist_name) like upper(#{searchKeyword})
                            </when>
                            <when test='category.equals("a")'>
                                upper(a.album_name) like upper(#{searchKeyword})
                            </when>
                        </choose>
                    </where>
                    ORDER BY a.album_release_date DESC
                )
                WHERE ROWNUM &lt;= #{endRow}
            )
            WHERE rnum >= #{startRow}
        </select>

    
    
  </mapper>